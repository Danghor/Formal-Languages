Warning : *** Shift/Reduce conflict found in state #12
  between expr ::= expr MINUS expr (*) 
  and     expr ::= expr (*) PLUS expr 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #12
  between expr ::= expr MINUS expr (*) 
  and     expr ::= expr (*) MINUS expr 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #12
  between expr ::= expr MINUS expr (*) 
  and     expr ::= expr (*) TIMES expr 
  under symbol TIMES
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #12
  between expr ::= expr MINUS expr (*) 
  and     expr ::= expr (*) DIVIDE expr 
  under symbol DIVIDE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #12
  between expr ::= expr MINUS expr (*) 
  and     expr ::= expr (*) MOD expr 
  under symbol MOD
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #11
  between expr ::= expr DIVIDE expr (*) 
  and     expr ::= expr (*) PLUS expr 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #11
  between expr ::= expr DIVIDE expr (*) 
  and     expr ::= expr (*) MINUS expr 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #11
  between expr ::= expr DIVIDE expr (*) 
  and     expr ::= expr (*) TIMES expr 
  under symbol TIMES
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #11
  between expr ::= expr DIVIDE expr (*) 
  and     expr ::= expr (*) DIVIDE expr 
  under symbol DIVIDE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #11
  between expr ::= expr DIVIDE expr (*) 
  and     expr ::= expr (*) MOD expr 
  under symbol MOD
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #14
  between expr ::= expr MOD expr (*) 
  and     expr ::= expr (*) PLUS expr 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #14
  between expr ::= expr MOD expr (*) 
  and     expr ::= expr (*) MINUS expr 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #14
  between expr ::= expr MOD expr (*) 
  and     expr ::= expr (*) TIMES expr 
  under symbol TIMES
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #14
  between expr ::= expr MOD expr (*) 
  and     expr ::= expr (*) DIVIDE expr 
  under symbol DIVIDE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #14
  between expr ::= expr MOD expr (*) 
  and     expr ::= expr (*) MOD expr 
  under symbol MOD
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #13
  between expr ::= expr PLUS expr (*) 
  and     expr ::= expr (*) PLUS expr 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #13
  between expr ::= expr PLUS expr (*) 
  and     expr ::= expr (*) MINUS expr 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #13
  between expr ::= expr PLUS expr (*) 
  and     expr ::= expr (*) TIMES expr 
  under symbol TIMES
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #13
  between expr ::= expr PLUS expr (*) 
  and     expr ::= expr (*) DIVIDE expr 
  under symbol DIVIDE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #13
  between expr ::= expr PLUS expr (*) 
  and     expr ::= expr (*) MOD expr 
  under symbol MOD
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #10
  between expr ::= expr TIMES expr (*) 
  and     expr ::= expr (*) PLUS expr 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #10
  between expr ::= expr TIMES expr (*) 
  and     expr ::= expr (*) MINUS expr 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #10
  between expr ::= expr TIMES expr (*) 
  and     expr ::= expr (*) TIMES expr 
  under symbol TIMES
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #10
  between expr ::= expr TIMES expr (*) 
  and     expr ::= expr (*) DIVIDE expr 
  under symbol DIVIDE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #10
  between expr ::= expr TIMES expr (*) 
  and     expr ::= expr (*) MOD expr 
  under symbol MOD
  Resolved in favor of shifting.

Error : *** More conflicts encountered than expected -- parser generation aborted
===== Terminals =====
[0]EOF [1]error [2]PLUS [3]MINUS [4]TIMES 
[5]DIVIDE [6]MOD [7]LPAREN [8]RPAREN [9]NUMBER 


===== Non terminals =====
[0]expr 

===== Productions =====
[0] expr ::= expr PLUS expr 
[1] $START ::= expr EOF 
[2] expr ::= expr MINUS expr 
[3] expr ::= expr TIMES expr 
[4] expr ::= expr DIVIDE expr 
[5] expr ::= expr MOD expr 
[6] expr ::= NUMBER 
[7] expr ::= LPAREN expr RPAREN 

===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [$START ::= (*) expr EOF , {EOF }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
}
transition on expr to state [3]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [1]: {
  [expr ::= NUMBER (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}

-------------------
lalr_state [2]: {
  [expr ::= (*) expr MOD expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= LPAREN (*) expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [15]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [3]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [$START ::= expr (*) EOF , {EOF }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD }]
}
transition on EOF to state [9]
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [4]: {
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr MOD (*) expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [14]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [5]: {
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr PLUS (*) expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [13]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [6]: {
  [expr ::= expr MINUS (*) expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [12]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [7]: {
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr DIVIDE (*) expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [11]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [8]: {
  [expr ::= (*) expr MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) LPAREN expr RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr TIMES (*) expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) NUMBER , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= (*) expr PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on expr to state [10]
transition on LPAREN to state [2]
transition on NUMBER to state [1]

-------------------
lalr_state [9]: {
  [$START ::= expr EOF (*) , {EOF }]
}

-------------------
lalr_state [10]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr TIMES expr (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [11]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr DIVIDE expr (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [12]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr MINUS expr (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [13]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr PLUS expr (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [14]: {
  [expr ::= expr (*) MOD expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr MOD expr (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on MOD to state [4]

-------------------
lalr_state [15]: {
  [expr ::= expr (*) MOD expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) MINUS expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= LPAREN expr (*) RPAREN , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) DIVIDE expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) TIMES expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
  [expr ::= expr (*) PLUS expr , {PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}
transition on TIMES to state [8]
transition on DIVIDE to state [7]
transition on MINUS to state [6]
transition on PLUS to state [5]
transition on RPAREN to state [16]
transition on MOD to state [4]

-------------------
lalr_state [16]: {
  [expr ::= LPAREN expr RPAREN (*) , {EOF PLUS MINUS TIMES DIVIDE MOD RPAREN }]
}

-------------------
------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  1 error and 25 warnings
  10 terminals, 1 non-terminal, and 8 productions declared, 
  producing 17 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  25 conflicts detected (0 expected).
  No code produced.
---------------------------------------------------- (v0.11a beta 20060608)
