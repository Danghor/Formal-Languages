Warning : *** Reduce/Reduce conflict found in state #1
  between name ::= ID (*) 
  and     type ::= ID (*) 
  under symbols: {COMMA}
  Resolved in favor of the second production.

Warning : *** Shift/Reduce conflict found in state #1
  between name ::= ID (*) 
  under symbol COMMA
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #1
  between type ::= ID (*) 
  under symbol COMMA
  Resolved in favor of shifting.

Error : *** More conflicts encountered than expected -- parser generation aborted
===== Terminals =====
[0]EOF [1]error [2]ID [3]COMMA [4]COLON 


===== Non terminals =====
[0]def [1]param_spec [2]return_spec [3]type [4]name_list 
[5]name 

===== Productions =====
[0] def ::= param_spec return_spec COMMA 
[1] $START ::= def EOF 
[2] param_spec ::= type 
[3] param_spec ::= name_list COLON type 
[4] return_spec ::= type 
[5] return_spec ::= name COLON type 
[6] type ::= ID 
[7] name ::= ID 
[8] name_list ::= name 
[9] name_list ::= name COMMA name_list 

===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [name_list ::= (*) name , {COLON }]
  [param_spec ::= (*) type , {ID }]
  [name ::= (*) ID , {COMMA COLON }]
  [$START ::= (*) def EOF , {EOF }]
  [name_list ::= (*) name COMMA name_list , {COLON }]
  [type ::= (*) ID , {ID }]
  [param_spec ::= (*) name_list COLON type , {ID }]
  [def ::= (*) param_spec return_spec COMMA , {EOF }]
}
transition on def to state [6]
transition on param_spec to state [5]
transition on type to state [4]
transition on name to state [3]
transition on name_list to state [2]
transition on ID to state [1]

-------------------
lalr_state [1]: {
  [name ::= ID (*) , {COMMA COLON }]
  [type ::= ID (*) , {ID COMMA }]
}

-------------------
lalr_state [2]: {
  [param_spec ::= name_list (*) COLON type , {ID }]
}
transition on COLON to state [18]

-------------------
lalr_state [3]: {
  [name_list ::= name (*) COMMA name_list , {COLON }]
  [name_list ::= name (*) , {COLON }]
}
transition on COMMA to state [15]

-------------------
lalr_state [4]: {
  [param_spec ::= type (*) , {ID }]
}

-------------------
lalr_state [5]: {
  [return_spec ::= (*) name COLON type , {COMMA }]
  [name ::= (*) ID , {COLON }]
  [return_spec ::= (*) type , {COMMA }]
  [type ::= (*) ID , {COMMA }]
  [def ::= param_spec (*) return_spec COMMA , {EOF }]
}
transition on type to state [10]
transition on name to state [9]
transition on return_spec to state [8]
transition on ID to state [1]

-------------------
lalr_state [6]: {
  [$START ::= def (*) EOF , {EOF }]
}
transition on EOF to state [7]

-------------------
lalr_state [7]: {
  [$START ::= def EOF (*) , {EOF }]
}

-------------------
lalr_state [8]: {
  [def ::= param_spec return_spec (*) COMMA , {EOF }]
}
transition on COMMA to state [14]

-------------------
lalr_state [9]: {
  [return_spec ::= name (*) COLON type , {COMMA }]
}
transition on COLON to state [11]

-------------------
lalr_state [10]: {
  [return_spec ::= type (*) , {COMMA }]
}

-------------------
lalr_state [11]: {
  [type ::= (*) ID , {COMMA }]
  [return_spec ::= name COLON (*) type , {COMMA }]
}
transition on type to state [13]
transition on ID to state [12]

-------------------
lalr_state [12]: {
  [type ::= ID (*) , {ID COMMA }]
}

-------------------
lalr_state [13]: {
  [return_spec ::= name COLON type (*) , {COMMA }]
}

-------------------
lalr_state [14]: {
  [def ::= param_spec return_spec COMMA (*) , {EOF }]
}

-------------------
lalr_state [15]: {
  [name_list ::= (*) name , {COLON }]
  [name ::= (*) ID , {COMMA COLON }]
  [name_list ::= name COMMA (*) name_list , {COLON }]
  [name_list ::= (*) name COMMA name_list , {COLON }]
}
transition on name to state [3]
transition on name_list to state [17]
transition on ID to state [16]

-------------------
lalr_state [16]: {
  [name ::= ID (*) , {COMMA COLON }]
}

-------------------
lalr_state [17]: {
  [name_list ::= name COMMA name_list (*) , {COLON }]
}

-------------------
lalr_state [18]: {
  [param_spec ::= name_list COLON (*) type , {ID }]
  [type ::= (*) ID , {ID }]
}
transition on type to state [19]
transition on ID to state [12]

-------------------
lalr_state [19]: {
  [param_spec ::= name_list COLON type (*) , {ID }]
}

-------------------
------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  1 error and 3 warnings
  5 terminals, 6 non-terminals, and 10 productions declared, 
  producing 20 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  3 conflicts detected (0 expected).
  No code produced.
---------------------------------------------------- (v0.11a beta 20060608)
