type list(X) := nil + cons(X, list(X));

signature concat: list(T) * list(T) -> list(T);
signature x: int;
signature y: int;
signature z: int;
signature l1: list(char);
signature l2: list(int);

concat(nil, cons(y, nil)): list(int);
concat(cons(x, nil), cons(y, cons(z, nil))): list(int);
concat(nil, nil): list(int);
concat(l1, l2): list(int);
