Tokens:    [$, '(', ')', '*', '+', '-', '/', NUMBER]

Variables: [S, expr, factor, product]

Grammar: 
S -> expr $
expr -> expr '+' product
expr -> expr '-' product
expr -> product
factor -> '(' expr ')'
factor -> NUMBER
product -> factor
product -> product '*' factor
product -> product '/' factor


Follow(  S) = []
Follow(  expr) = [$, ')', '+', '-']
Follow(  factor) = [$, ')', '*', '+', '-', '/']
Follow(  product) = [$, ')', '*', '+', '-', '/']


s0 = { S -> <*> expr $,
       expr -> <*> expr '+' product,
       expr -> <*> expr '-' product,
       expr -> <*> product,
       factor -> <*> '(' expr ')',
       factor -> <*> NUMBER,
       product -> <*> factor,
       product -> <*> product '*' factor,
       product -> <*> product '/' factor
     }

s1 = { S -> expr <*> $,
       expr -> expr <*> '+' product,
       expr -> expr <*> '-' product
     }

s2 = { expr -> <*> expr '+' product,
       expr -> <*> expr '-' product,
       expr -> <*> product,
       factor -> <*> '(' expr ')',
       factor -> <*> NUMBER,
       factor -> '(' <*> expr ')',
       product -> <*> factor,
       product -> <*> product '*' factor,
       product -> <*> product '/' factor
     }

s3 = { expr -> expr <*> '+' product,
       expr -> expr <*> '-' product,
       factor -> '(' expr <*> ')'
     }

s4 = { expr -> expr '+' <*> product,
       factor -> <*> '(' expr ')',
       factor -> <*> NUMBER,
       product -> <*> factor,
       product -> <*> product '*' factor,
       product -> <*> product '/' factor
     }

s5 = { expr -> expr '+' product <*>,
       product -> product <*> '*' factor,
       product -> product <*> '/' factor
     }

s6 = { expr -> expr '-' <*> product,
       factor -> <*> '(' expr ')',
       factor -> <*> NUMBER,
       product -> <*> factor,
       product -> <*> product '*' factor,
       product -> <*> product '/' factor
     }

s7 = { expr -> expr '-' product <*>,
       product -> product <*> '*' factor,
       product -> product <*> '/' factor
     }

s8 = { expr -> product <*>,
       product -> product <*> '*' factor,
       product -> product <*> '/' factor
     }

s9 = { factor -> <*> '(' expr ')',
       factor -> <*> NUMBER,
       product -> product '*' <*> factor
     }

s10 = { factor -> <*> '(' expr ')',
        factor -> <*> NUMBER,
        product -> product '/' <*> factor
      }

s11 = { factor -> '(' expr ')' <*> }

s12 = { factor -> NUMBER <*> }

s13 = { product -> factor <*> }

s14 = { product -> product '*' factor <*> }

s15 = { product -> product '/' factor <*> }

Action Table:
action(s0, '(') = <shift, s2>
action(s0, NUMBER) = <shift, s12>
action(s1, $) = <accept>
action(s1, '+') = <shift, s4>
action(s1, '-') = <shift, s6>
action(s2, '(') = <shift, s2>
action(s2, NUMBER) = <shift, s12>
action(s3, ')') = <shift, s11>
action(s3, '+') = <shift, s4>
action(s3, '-') = <shift, s6>
action(s4, '(') = <shift, s2>
action(s4, NUMBER) = <shift, s12>
action(s5, $) = <reduce, expr -> expr '+' product>
action(s5, ')') = <reduce, expr -> expr '+' product>
action(s5, '*') = <shift, s9>
action(s5, '+') = <reduce, expr -> expr '+' product>
action(s5, '-') = <reduce, expr -> expr '+' product>
action(s5, '/') = <shift, s10>
action(s6, '(') = <shift, s2>
action(s6, NUMBER) = <shift, s12>
action(s7, $) = <reduce, expr -> expr '-' product>
action(s7, ')') = <reduce, expr -> expr '-' product>
action(s7, '*') = <shift, s9>
action(s7, '+') = <reduce, expr -> expr '-' product>
action(s7, '-') = <reduce, expr -> expr '-' product>
action(s7, '/') = <shift, s10>
action(s8, $) = <reduce, expr -> product>
action(s8, ')') = <reduce, expr -> product>
action(s8, '*') = <shift, s9>
action(s8, '+') = <reduce, expr -> product>
action(s8, '-') = <reduce, expr -> product>
action(s8, '/') = <shift, s10>
action(s9, '(') = <shift, s2>
action(s9, NUMBER) = <shift, s12>
action(s10, '(') = <shift, s2>
action(s10, NUMBER) = <shift, s12>
action(s11, $) = <reduce, factor -> '(' expr ')'>
action(s11, ')') = <reduce, factor -> '(' expr ')'>
action(s11, '*') = <reduce, factor -> '(' expr ')'>
action(s11, '+') = <reduce, factor -> '(' expr ')'>
action(s11, '-') = <reduce, factor -> '(' expr ')'>
action(s11, '/') = <reduce, factor -> '(' expr ')'>
action(s12, $) = <reduce, factor -> NUMBER>
action(s12, ')') = <reduce, factor -> NUMBER>
action(s12, '*') = <reduce, factor -> NUMBER>
action(s12, '+') = <reduce, factor -> NUMBER>
action(s12, '-') = <reduce, factor -> NUMBER>
action(s12, '/') = <reduce, factor -> NUMBER>
action(s13, $) = <reduce, product -> factor>
action(s13, ')') = <reduce, product -> factor>
action(s13, '*') = <reduce, product -> factor>
action(s13, '+') = <reduce, product -> factor>
action(s13, '-') = <reduce, product -> factor>
action(s13, '/') = <reduce, product -> factor>
action(s14, $) = <reduce, product -> product '*' factor>
action(s14, ')') = <reduce, product -> product '*' factor>
action(s14, '*') = <reduce, product -> product '*' factor>
action(s14, '+') = <reduce, product -> product '*' factor>
action(s14, '-') = <reduce, product -> product '*' factor>
action(s14, '/') = <reduce, product -> product '*' factor>
action(s15, $) = <reduce, product -> product '/' factor>
action(s15, ')') = <reduce, product -> product '/' factor>
action(s15, '*') = <reduce, product -> product '/' factor>
action(s15, '+') = <reduce, product -> product '/' factor>
action(s15, '-') = <reduce, product -> product '/' factor>
action(s15, '/') = <reduce, product -> product '/' factor>

Goto Table:
goto(s0, expr) = s1
goto(s0, factor) = s13
goto(s0, product) = s8
goto(s2, expr) = s3
goto(s2, factor) = s13
goto(s2, product) = s8
goto(s4, factor) = s13
goto(s4, product) = s5
goto(s6, factor) = s13
goto(s6, product) = s7
goto(s9, factor) = s14
goto(s10, factor) = s15
