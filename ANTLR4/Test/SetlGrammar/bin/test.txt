-- Es war einmal ein Bauer, der wollte mit einem wolf, einer goat und
-- einer Kiste cabbage über einen Fluß übersetzen.  In dem Boot war aber
-- nicht genug Platz für alles, der Bauer konnte maximal ein Tiere oder 
-- das Gemüse mitnehmen.  Er konnte aber auch wolf und goat nicht 
-- alleine lassen, denn dann hätte der wolf die goat gefressen.
-- Ebensowenig konnte er die goat mit dem cabbage alleine lassen, denn
-- dann hätte die goat den cabbage gefressen.

	print("ANFANG");
	
    -- The set S presents a problem if either the goat and the cabbage or the
    -- wolf and the goat are contained in S.
    procedure problem(S);
	
	print("problem procedure");
		if((3 in S) and (4 in S)) or (2 in S and 3 in S) then
        	return 1;
        else
			return 0;
		end if;
    end problem;

    procedure cyclic(p);
	
	print("cyclic procedure");
		if #{x: x in p } < #p then
			return 1;
        else
			return 0;
		end if;
    end cyclic;

    -- The product call add(p,q) computes the sum of the lists p and q.
    -- The last point of p has to be the first point of q.
    procedure add(p, q);
	
	print("add procedure");
        return p + q[2..#q];
    end add;